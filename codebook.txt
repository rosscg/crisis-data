This project stores data collected from Twitter as follows:


User
Twitter user object, added manually or via the data collection.
Note that id is an autofield generated by Django, and the ID from Twitter is stored as user_id instead
user_class represents the relevance of the user to the collection as follows:
  2 = Ego: Tweeted a message identified in the stream.
  1 = A class 0 user which has been identified as 'non-spam' account and promoted. 'Spam accounts' also refer to celebrities and news outlets and are identified as having a high follower/following/tweet value as set in config.py
  0 = Alter: Follows or is followed by an ego user.
  -1 = A class 0 user which has been identified as a 'spam' account.
in_degree and out_degree currently only represent the degrees to ego accounts and are therefore only relevant to alter objects, or egos with relationships with other egos.
Note: id is a field generated automatically, the user's Twitter id is stored as user_id


Tweet
Tweet object collected via the stream, or lookup.
Author is represented as a User object FK.
Note that id is an autofield generated by Django, and the ID from Twitter is stored as tweet_id instead
data_source: 0 = Rest API, 1 = Low-priority keyword stream, 2 = priority keyword stream, 3 = gps stream


Hashtag
Hashtags from collected Tweets (represented as the FK).


Url
URLS attached to collected Tweets (represented as the FK).


Mention
Mentioned user names (as strings) from collected Tweets (represented as the FK).


Relo
Relationship between two users as foreign keys. Stores the date the relationship was observed, and a possible date when the relationship was observed (i.e. after the relationship was cancelled). Note that these dates refer to the time of observation, not the time of relationship creation/end.


Keyword
Keywords used to track via the Twitter stream. These can be added manually, or automatically added based on their prevalence in streamed Tweets.


AccessToken
Access tokens used for data collection stored with their associated screen name.


ConsumerKey
Consumer key and secret used for data collection.


CeleryTask
Stores Celery task object IDs, used to track and terminate running tasks.
